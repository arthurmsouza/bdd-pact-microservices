buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
        jarName = "product-catalogue-${version}.jar"
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('com.bmuschko:gradle-docker-plugin:3.6.1')
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.5.RELEASE"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.bmuschko.docker-remote-api'


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("au.com.dius:pact-jvm-provider-spring_2.12:3.5.21")
    testCompile("org.dbunit:dbunit:2.5.4")
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task copyFilesForDocker(type: Copy) {
    dependsOn build
    from project.file("build/libs/${jarName}")
    into project.file('build/docker/files')
}

task createDockerfile(type: Dockerfile) {
    dependsOn copyFilesForDocker
    destFile project.file('build/docker/Dockerfile')
    from("alpine:edge")
    maintainer('Javier Gil "javier@gilpereda.com"')
    runCommand('apk add --no-cache openjdk8')
    copyFile("files/${jarName}", "/opt/product-catalogue/lib/product-catalogue.jar")
    entryPoint('/usr/bin/java', '-jar', '-Dspring.profiles.active=demo', '-Dserver.port=8080', '/opt/product-catalogue/lib/product-catalogue.jar')
    exposePort 8080
}

task buildDockerImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    dependsOn ':checkDockerIsAvailable'
    inputDir project.file('build/docker')
    tags = ['jagilpe/product-catalog-service:latest', "jagilpe/product-catalog-service:${version}".toString()]
}

processTestResources.dependsOn ':api-gateway:pactPublish'
